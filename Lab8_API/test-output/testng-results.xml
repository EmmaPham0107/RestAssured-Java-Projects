<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="7" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-19T13:08:02 SGT" name="Suite1" finished-at="2024-01-19T13:08:05 SGT" duration-ms="3257">
    <groups>
    </groups>
    <test started-at="2024-01-19T13:08:02 SGT" name="validPost" finished-at="2024-01-19T13:08:05 SGT" duration-ms="2785">
      <class name="lab8_Example.Test_validPost">
        <test-method is-config="true" signature="initMethod()[pri:0, instance:lab8_Example.Test_validPost@76908cc0]" started-at="2024-01-19T13:08:02 SGT" name="initMethod" finished-at="2024-01-19T13:08:04 SGT" duration-ms="2393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method signature="TC01_StatusCodeChecked()[pri:0, instance:lab8_Example.Test_validPost@76908cc0]" started-at="2024-01-19T13:08:04 SGT" name="TC01_StatusCodeChecked" finished-at="2024-01-19T13:08:04 SGT" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01_StatusCodeChecked -->
        <test-method signature="TC02_idChecked()[pri:0, instance:lab8_Example.Test_validPost@76908cc0]" started-at="2024-01-19T13:08:04 SGT" name="TC02_idChecked" finished-at="2024-01-19T13:08:04 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02_idChecked -->
        <test-method signature="TC03_createdAtChecked()[pri:0, instance:lab8_Example.Test_validPost@76908cc0]" started-at="2024-01-19T13:08:04 SGT" name="TC03_createdAtChecked" finished-at="2024-01-19T13:08:04 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC03_createdAtChecked -->
        <test-method signature="TC04_verifyOnMatchingName()[pri:0, instance:lab8_Example.Test_validPost@76908cc0]" started-at="2024-01-19T13:08:04 SGT" name="TC04_verifyOnMatchingName" finished-at="2024-01-19T13:08:05 SGT" duration-ms="311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC04_verifyOnMatchingName -->
        <test-method signature="TC05_verifyOnMatchingGender()[pri:0, instance:lab8_Example.Test_validPost@76908cc0]" started-at="2024-01-19T13:08:05 SGT" name="TC05_verifyOnMatchingGender" finished-at="2024-01-19T13:08:05 SGT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC05_verifyOnMatchingGender -->
        <test-method signature="TC06_verifyOnMatchingAge()[pri:0, instance:lab8_Example.Test_validPost@76908cc0]" started-at="2024-01-19T13:08:05 SGT" name="TC06_verifyOnMatchingAge" finished-at="2024-01-19T13:08:05 SGT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC06_verifyOnMatchingAge -->
        <test-method signature="TC07_verifyOnMatchingJob()[pri:0, instance:lab8_Example.Test_validPost@76908cc0]" started-at="2024-01-19T13:08:05 SGT" name="TC07_verifyOnMatchingJob" finished-at="2024-01-19T13:08:05 SGT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC07_verifyOnMatchingJob -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:lab8_Example.Test_validPost@76908cc0]" started-at="2024-01-19T13:08:05 SGT" name="afterTest" finished-at="2024-01-19T13:08:05 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- lab8_Example.Test_validPost -->
    </test> <!-- validPost -->
    <test started-at="2024-01-19T13:08:05 SGT" name="invalidPost" finished-at="2024-01-19T13:08:05 SGT" duration-ms="438">
      <class name="lab8_Example.Test_invalidPost">
        <test-method is-config="true" signature="initMethod()[pri:0, instance:lab8_Example.Test_invalidPost@4f209819]" started-at="2024-01-19T13:08:05 SGT" name="initMethod" finished-at="2024-01-19T13:08:05 SGT" duration-ms="414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method signature="TC08_StatusCodeChecked()[pri:0, instance:lab8_Example.Test_invalidPost@4f209819]" started-at="2024-01-19T13:08:05 SGT" name="TC08_StatusCodeChecked" finished-at="2024-01-19T13:08:05 SGT" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status check Failed! expected [400] but found [201]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status check Failed! expected [400] but found [201]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1418)
at org.testng.Assert.assertEquals(Assert.java:1382)
at lab8_Example.Test_invalidPost.TC08_StatusCodeChecked(Test_invalidPost.java:37)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC08_StatusCodeChecked -->
        <test-method signature="TC09_MessageFieldChecked()[pri:0, instance:lab8_Example.Test_invalidPost@4f209819]" started-at="2024-01-19T13:08:05 SGT" name="TC09_MessageFieldChecked" finished-at="2024-01-19T13:08:05 SGT" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Message field check Failed! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Message field check Failed! expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at lab8_Example.Test_invalidPost.TC09_MessageFieldChecked(Test_invalidPost.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC09_MessageFieldChecked -->
        <test-method signature="TC10_VerifyOnMessageContainName()[pri:0, instance:lab8_Example.Test_invalidPost@4f209819]" started-at="2024-01-19T13:08:05 SGT" name="TC10_VerifyOnMessageContainName" finished-at="2024-01-19T13:08:05 SGT" duration-ms="10" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Message does not contain invalid field! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Message does not contain invalid field! expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at lab8_Example.Test_invalidPost.TC10_VerifyOnMessageContainName(Test_invalidPost.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC10_VerifyOnMessageContainName -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:lab8_Example.Test_invalidPost@4f209819]" started-at="2024-01-19T13:08:05 SGT" name="afterClass" finished-at="2024-01-19T13:08:05 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- lab8_Example.Test_invalidPost -->
    </test> <!-- invalidPost -->
  </suite> <!-- Suite1 -->
</testng-results>
